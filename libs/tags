!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AS	../Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
ASFLAGS	../Makefile	/^ASFLAGS = -m32 -gdwarf-2 -Wa,-divide $(INCLUDEFLAGS)$/;"	m
BOOTLOADER_DIR	../Makefile	/^BOOTLOADER_DIR := .\/boot$/;"	m
CC	../Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	../Makefile	/^CFLAGS = $(INCLUDEFLAGS) -fno-pic -static -fno-builtin   -fno-strict-aliasing   -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer$/;"	m
CH_MAX	../kern/kernel.asm	/^#define CH_MAX 15$/;"	d
CH_MAX	../libs/printfmt.c	4;"	d	file:
CPUS	../Makefile	/^CPUS := 2$/;"	m
CR0_AM	../libs/mmu.h	37;"	d
CR0_CD	../libs/mmu.h	39;"	d
CR0_EM	../libs/mmu.h	32;"	d
CR0_ET	../libs/mmu.h	34;"	d
CR0_MP	../libs/mmu.h	31;"	d
CR0_NE	../libs/mmu.h	35;"	d
CR0_NW	../libs/mmu.h	38;"	d
CR0_PE	../libs/mmu.h	30;"	d
CR0_PG	../libs/mmu.h	40;"	d
CR0_TS	../libs/mmu.h	33;"	d
CR0_WP	../libs/mmu.h	36;"	d
CR4_PSE	../libs/mmu.h	42;"	d
C_OBJS	../Makefile	/^C_OBJS = $(shell find $(KERN_DIR) -name "*.c")$/;"	m
DEVSPACE	../libs/memlayout.h	7;"	d
DPL_USER	../libs/mmu.h	57;"	d
D_OBJS	../Makefile	/^D_OBJS := $(patsubst %o,%d,$(OBJS))$/;"	m
Disassembly	../boot/bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	../kern/kernel.asm	/^Disassembly of section .text:$/;"	l
ELFHDR	../boot/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
ELFHDR	../boot/bootmain.c	13;"	d	file:
ELF_MAGIC	../libs/elf.h	6;"	d
EXTMEM	../libs/memlayout.h	5;"	d
FL_AC	../libs/mmu.h	24;"	d
FL_AF	../libs/mmu.h	9;"	d
FL_CF	../libs/mmu.h	7;"	d
FL_DF	../libs/mmu.h	14;"	d
FL_ID	../libs/mmu.h	27;"	d
FL_IF	../libs/mmu.h	13;"	d
FL_IOPL_0	../libs/mmu.h	17;"	d
FL_IOPL_1	../libs/mmu.h	18;"	d
FL_IOPL_2	../libs/mmu.h	19;"	d
FL_IOPL_3	../libs/mmu.h	20;"	d
FL_IOPL_MASK	../libs/mmu.h	16;"	d
FL_NT	../libs/mmu.h	21;"	d
FL_OF	../libs/mmu.h	15;"	d
FL_PF	../libs/mmu.h	8;"	d
FL_RF	../libs/mmu.h	22;"	d
FL_SF	../libs/mmu.h	11;"	d
FL_TF	../libs/mmu.h	12;"	d
FL_VIF	../libs/mmu.h	25;"	d
FL_VIP	../libs/mmu.h	26;"	d
FL_VM	../libs/mmu.h	23;"	d
FL_ZF	../libs/mmu.h	10;"	d
GDBPORT	../Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
INCLUDEFLAGS	../Makefile	/^INCLUDEFLAGS := $(addprefix -I,$(shell find .\/kern -type d)) -I.\/libs$/;"	m
KERNBASE	../libs/memlayout.h	10;"	d
KERNLINK	../libs/memlayout.h	11;"	d
KERN_DIR	../Makefile	/^KERN_DIR := .\/kern$/;"	m
KERN_LD	../Makefile	/^KERN_LD := .\/tools\/kernel.ld$/;"	m
KSTACKSIZE	../libs/param.h	3;"	d
LD	../Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LIBS_DIR	../Makefile	/^LIBS_DIR := .\/libs$/;"	m
LIBS_OBJS	../Makefile	/^LIBS_OBJS = $(shell find $(LIBS_DIR) -name "*.c") $/;"	m
NPDENTRIES	../libs/mmu.h	99;"	d
NPTENTRIES	../libs/mmu.h	100;"	d
NSEGS	../libs/mmu.h	53;"	d
NULL	../libs/defs.h	5;"	d
OBJCOPY	../Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	../Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	../Makefile	/^OBJS := $(patsubst %.c,%.o,$(C_OBJS))$/;"	m
P2V	../libs/memlayout.h	14;"	d
P2V_WO	../libs/memlayout.h	17;"	d
PDX	../libs/mmu.h	90;"	d
PDXSHIFT	../libs/mmu.h	105;"	d
PGADDR	../libs/mmu.h	96;"	d
PGROUNDDOWN	../libs/mmu.h	108;"	d
PGROUNDUP	../libs/mmu.h	107;"	d
PGSHIFT	../libs/mmu.h	103;"	d
PGSIZE	../libs/mmu.h	101;"	d
PHYSTOP	../libs/memlayout.h	6;"	d
PTE_A	../libs/mmu.h	116;"	d
PTE_ADDR	../libs/mmu.h	122;"	d
PTE_D	../libs/mmu.h	117;"	d
PTE_FLAGS	../libs/mmu.h	123;"	d
PTE_MBZ	../libs/mmu.h	119;"	d
PTE_P	../libs/mmu.h	111;"	d
PTE_PCD	../libs/mmu.h	115;"	d
PTE_PS	../libs/mmu.h	118;"	d
PTE_PWT	../libs/mmu.h	114;"	d
PTE_U	../libs/mmu.h	113;"	d
PTE_W	../libs/mmu.h	112;"	d
PTX	../libs/mmu.h	93;"	d
PTXSHIFT	../libs/mmu.h	104;"	d
QEMU	../Makefile	/^QEMU = $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUGDB	../Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	../Makefile	/^QEMUOPTS =  -drive file=xv6.img,index=0,media=disk,format=raw -smp $(CPUS) -m 512 $(QEMUEXTRA)$/;"	m
SECTSIZE	../boot/bootmain.c	12;"	d	file:
SEG_ASM	../boot/asm.h	11;"	d
SEG_KCODE	../libs/mmu.h	45;"	d
SEG_KCPU	../libs/mmu.h	47;"	d
SEG_KDATA	../libs/mmu.h	46;"	d
SEG_NULLASM	../boot/asm.h	7;"	d
SEG_TSS	../libs/mmu.h	50;"	d
SEG_UCODE	../libs/mmu.h	48;"	d
SEG_UDATA	../libs/mmu.h	49;"	d
STA_A	../boot/asm.h	23;"	d
STA_A	../libs/mmu.h	65;"	d
STA_C	../boot/asm.h	20;"	d
STA_C	../libs/mmu.h	62;"	d
STA_E	../boot/asm.h	19;"	d
STA_E	../libs/mmu.h	61;"	d
STA_R	../boot/asm.h	22;"	d
STA_R	../libs/mmu.h	64;"	d
STA_W	../boot/asm.h	21;"	d
STA_W	../libs/mmu.h	63;"	d
STA_X	../boot/asm.h	18;"	d
STA_X	../libs/mmu.h	60;"	d
STS_CG16	../libs/mmu.h	71;"	d
STS_CG32	../libs/mmu.h	77;"	d
STS_IG16	../libs/mmu.h	73;"	d
STS_IG32	../libs/mmu.h	78;"	d
STS_LDT	../libs/mmu.h	69;"	d
STS_T16A	../libs/mmu.h	68;"	d
STS_T16B	../libs/mmu.h	70;"	d
STS_T32A	../libs/mmu.h	75;"	d
STS_T32B	../libs/mmu.h	76;"	d
STS_TG	../libs/mmu.h	72;"	d
STS_TG16	../libs/mmu.h	74;"	d
STS_TG32	../libs/mmu.h	79;"	d
S_OBJS	../Makefile	/^S_OBJS = $(shell find $(KERN_DIR) -name "*.S")$/;"	m
TOOLS_DIR	../Makefile	/^TOOLS_DIR := .\/tools$/;"	m
V2P	../libs/memlayout.h	13;"	d
V2P_WO	../libs/memlayout.h	16;"	d
_CONSOLE_H_	../kern/driver/console.h	2;"	d
_LIBS_DEFS_H_	../libs/defs.h	2;"	d
_LIBS_MEMLAYOUT_H_	../libs/memlayout.h	2;"	d
_LIBS_MMU_H_	../libs/mmu.h	2;"	d
_LIBS_PARAM_H_	../libs/param.h	2;"	d
_LIBS_STDIO_H_	../libs/stdio.h	2;"	d
_LIBS_STRING_H_	../libs/string.h	2;"	d
_LIBS_X86_H_	../libs/x86.h	2;"	d
__BOOT_ASM_H__	../boot/asm.h	2;"	d
__LIBS_ELF_H__	../libs/elf.h	2;"	d
__LIBS_STDARG_H__	../libs/stdarg.h	2;"	d
_start	../kern/init/entry.S	/^_start = V2P_WO(entry)$/;"	d
base	../kern/kernel.asm	/^        base = 10;$/;"	d
base	../libs/x86.h	/^    uint32_t base;        \/\/ Base address$/;"	m	struct:pseudodesc
bool	../libs/defs.h	/^typedef int bool;$/;"	t
bootmain	../boot/bootmain.c	/^bootmain(void)$/;"	f
ch	../kern/kernel.asm	/^           ch = *(++fmt);$/;"	d
cli	../libs/x86.h	/^cli(void) {$/;"	f
cnt	../kern/kernel.asm	/^    cnt = vprintfmt(putch,fmt,ap);$/;"	d
console_clear	../kern/driver/console.c	/^void console_clear()$/;"	f
console_clear	../kern/driver/console.h	/^void console_clear();$/;"	p
console_putc	../kern/driver/console.c	/^void console_putc(char cstr)$/;"	f
console_putc	../kern/driver/console.h	/^void console_putc(char cstr);$/;"	p
console_putc_color	../kern/driver/console.c	/^void console_putc_color(char c,real_color_t back, real_color_t fore)$/;"	f
console_putc_color	../kern/driver/console.h	/^void console_putc_color(char c, real_color_t back, real_color_t fore);$/;"	p
cprintf	../kern/libs/stdio.c	/^int cprintf(const char *fmt, ...)$/;"	f
cprintf	../libs/stdio.h	/^int cprintf(const char *fmt, ...);$/;"	p
cursor_x	../kern/driver/console.c	/^static uint8_t cursor_x = 0;$/;"	v	file:
cursor_x	../kern/kernel.asm	/^        cursor_x = (cursor_x + 8) & ~ (8 - 1);$/;"	d
cursor_x	../kern/kernel.asm	/^        cursor_x = 0; $/;"	d
cursor_x	../kern/kernel.asm	/^        cursor_x = 0;$/;"	d
cursor_x	../kern/kernel.asm	/^    cursor_x = 0;$/;"	d
cursor_y	../kern/driver/console.c	/^static uint8_t cursor_y = 0;$/;"	v	file:
cursor_y	../kern/kernel.asm	/^        cursor_y = 24;$/;"	d
cursor_y	../kern/kernel.asm	/^    cursor_y = 0;$/;"	d
default	../kern/kernel.asm	/^               default:$/;"	l
dig	../kern/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	../kern/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	../kern/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
e_ehsize	../libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	../libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	../libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	../libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	../libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	../libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	../libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	../libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	../libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	../libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	../libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	../libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	../libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	../libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	../libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
elf	../boot/bootblock.asm	/^  elf = ELFHDR;  \/\/ scratch space$/;"	d
elfhdr	../libs/elf.h	/^struct elfhdr {$/;"	s
entry	../boot/bootblock.asm	/^  entry = (void(*)(void))(elf->e_entry);$/;"	d
entry	../kern/init/entry.S	/^entry:$/;"	l
entry	../kern/kernel.asm	/^entry:$/;"	l
entrypgdir	../kern/init/init.c	/^pde_t entrypgdir[NPDENTRIES] = {$/;"	v
epa	../boot/bootblock.asm	/^  epa = pa + count;$/;"	d
eph	../boot/bootblock.asm	/^  eph = ph + elf->e_phnum;$/;"	d
f	../Makefile	/^	dd if=$(BOOTLOADER_DIR)\/bootblock of=xv6.img conv=notrunc$/;"	m
f	../Makefile	/^	dd if=$(KERN_DIR)\/kernel of=xv6.img seek=1 conv=notrunc$/;"	m
gdt	../boot/bootasm.S	/^gdt:$/;"	l
gdtdesc	../boot/bootasm.S	/^gdtdesc:$/;"	l
inb	../libs/x86.h	/^inb(uint16_t port) {$/;"	f
insl	../libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
int	../kern/kernel.asm	/^int cprintf(const char *fmt, ...)$/;"	l
int	../kern/kernel.asm	/^int main()$/;"	l
int	../kern/kernel.asm	/^int vprintfmt(void (*putch)(char), const char *fmt, va_list ap)$/;"	l
int	../kern/kernel.asm	/^int$/;"	l
int16_t	../libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	../libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	../libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	../libs/defs.h	/^typedef char int8_t;$/;"	t
intptr_t	../libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
itoa	../libs/string.c	/^char* itoa(int num, char* str, int radix)$/;"	f
itoa	../libs/string.h	/^char* itoa(int num, char* str, int radix);$/;"	p
len	../kern/kernel.asm	/^                   len = strlen(str);$/;"	d
len	../kern/kernel.asm	/^    len = strlen(str);$/;"	d
lidt	../libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
limit	../libs/x86.h	/^    uint16_t limit;        \/\/ Limit$/;"	m	struct:pseudodesc
long	../kern/kernel.asm	/^long$/;"	l
ltr	../libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
main	../kern/init/init.c	/^int main()$/;"	f
memcmp	../libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcmp	../libs/string.h	/^int memcmp(const void *v1, const void *v2, size_t n);$/;"	p
memcpy	../libs/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memcpy	../libs/string.h	/^void *memcpy(void *dst, const void *src, size_t n);$/;"	p
memmove	../libs/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memmove	../libs/string.h	/^void *memmove(void *dst, const void *src, size_t n);$/;"	p
memset	../libs/string.c	/^memset(void *s, char c, size_t n)$/;"	f
memset	../libs/string.h	/^void *memset(void *s, char c, size_t n);$/;"	p
move_cursor	../kern/driver/console.c	/^static void move_cursor()$/;"	f	file:
offset	../boot/bootblock.asm	/^  offset = (offset \/ SECTSIZE) + 1;$/;"	d
outb	../libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outw	../libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
p_align	../libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	../libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	../libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	../libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	../libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	../libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	../libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	../libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
pa	../boot/bootblock.asm	/^    pa = (uint8_t*)ph->p_pa;$/;"	d
pde_t	../libs/defs.h	/^typedef unsigned int pde_t;$/;"	t
ph	../boot/bootblock.asm	/^  ph = (struct proghdr*)((uint8_t*)elf + elf->e_phoff);$/;"	d
ppn_t	../libs/defs.h	/^typedef size_t ppn_t;$/;"	t
print_int	../libs/printfmt.c	/^static void print_int(void (*putch)(char),int num, int base, int width)$/;"	f	file:
proghdr	../libs/elf.h	/^struct proghdr {$/;"	s
pseudodesc	../libs/x86.h	/^struct pseudodesc {$/;"	s
putch	../kern/libs/stdio.c	/^static void putch(char ch)$/;"	f	file:
rc_black	../kern/driver/console.h	/^    rc_black,$/;"	e	enum:real_color
rc_blue	../kern/driver/console.h	/^    rc_blue,$/;"	e	enum:real_color
rc_brown	../kern/driver/console.h	/^    rc_brown,$/;"	e	enum:real_color
rc_cyan	../kern/driver/console.h	/^    rc_cyan,$/;"	e	enum:real_color
rc_dark_grey	../kern/driver/console.h	/^    rc_dark_grey,$/;"	e	enum:real_color
rc_green	../kern/driver/console.h	/^    rc_green,$/;"	e	enum:real_color
rc_light_blue	../kern/driver/console.h	/^    rc_light_blue,$/;"	e	enum:real_color
rc_light_brown	../kern/driver/console.h	/^    rc_light_brown,$/;"	e	enum:real_color
rc_light_cyan	../kern/driver/console.h	/^    rc_light_cyan,$/;"	e	enum:real_color
rc_light_green	../kern/driver/console.h	/^    rc_light_green,$/;"	e	enum:real_color
rc_light_grey	../kern/driver/console.h	/^    rc_light_grey,$/;"	e	enum:real_color
rc_light_magenta	../kern/driver/console.h	/^    rc_light_magenta,$/;"	e	enum:real_color
rc_light_red	../kern/driver/console.h	/^    rc_light_red,$/;"	e	enum:real_color
rc_magenta	../kern/driver/console.h	/^    rc_magenta,$/;"	e	enum:real_color
rc_red	../kern/driver/console.h	/^    rc_red,$/;"	e	enum:real_color
rc_white	../kern/driver/console.h	/^    rc_white,$/;"	e	enum:real_color
rc_xxxx	../kern/driver/console.h	/^    rc_xxxx$/;"	e	enum:real_color
read_ebp	../libs/x86.h	/^read_ebp(void) {$/;"	f
readsect	../boot/bootmain.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	../boot/bootmain.c	/^readseg(uint8_t* pa, uint32_t count, uint32_t offset)$/;"	f
readseg	../boot/bootmain.c	/^void readseg(uchar*, uint, uint);$/;"	p	file:
real_color	../kern/driver/console.h	/^enum real_color{$/;"	g
real_color_t	../kern/driver/console.h	/^}real_color_t;$/;"	t	typeref:enum:real_color
scroll	../kern/driver/console.c	/^static void scroll()$/;"	f	file:
size_t	../kern/kernel.asm	/^size_t $/;"	l
size_t	../kern/kernel.asm	/^size_t$/;"	l
size_t	../libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
spin	../boot/bootasm.S	/^spin:$/;"	l
spin	../boot/bootblock.asm	/^spin:$/;"	l
start	../boot/bootasm.S	/^start:$/;"	l
start	../boot/bootblock.asm	/^start:$/;"	l
start32	../boot/bootasm.S	/^start32:$/;"	l
start32	../boot/bootblock.asm	/^start32:$/;"	l
static	../boot/bootblock.asm	/^static inline uint8_t$/;"	l
static	../boot/bootblock.asm	/^static inline void$/;"	l
static	../kern/kernel.asm	/^static inline void$/;"	l
static	../kern/kernel.asm	/^static uint8_t cursor_x = 0;$/;"	l
static	../kern/kernel.asm	/^static uint8_t cursor_y = 0;$/;"	l
static	../kern/kernel.asm	/^static void move_cursor()$/;"	l
static	../kern/kernel.asm	/^static void print_int(void (*putch)(char),int num, int base, int width)$/;"	l
static	../kern/kernel.asm	/^static void putch(char ch)$/;"	l
static	../kern/kernel.asm	/^static void scroll()$/;"	l
sti	../libs/x86.h	/^sti(void) {$/;"	f
stosb	../libs/x86.h	/^stosb(void *addr, int32_t data, int32_t cnt)$/;"	f
stosl	../libs/x86.h	/^stosl(void *addr, int32_t data, int32_t cnt)$/;"	f
str	../kern/kernel.asm	/^                   str = va_arg(ap, char*);$/;"	d
strchr	../libs/string.c	/^strchr(const char *s, char c)$/;"	f
strchr	../libs/string.h	/^char *strchr(const char *s, char c);$/;"	p
strcmp	../libs/string.c	/^strcmp(const char *s1, const char *s2)$/;"	f
strcmp	../libs/string.h	/^int strcmp(const char *s1, const char *s2);$/;"	p
strcpy	../libs/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strcpy	../libs/string.h	/^char *strcpy(char *dst, const char *src);$/;"	p
strfind	../libs/string.c	/^strfind(const char *s, char c)$/;"	f
strfind	../libs/string.h	/^char *strfind(const char *s, char c);$/;"	p
strlen	../libs/string.c	/^strlen(const char *s)$/;"	f
strlen	../libs/string.h	/^size_t strlen(const char *s);$/;"	p
strncmp	../libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n)$/;"	f
strncmp	../libs/string.h	/^int strncmp(const char *s1, const char *s2, size_t n);$/;"	p
strncpy	../libs/string.c	/^strncpy(char *dst, const char *src, size_t len)$/;"	f
strncpy	../libs/string.h	/^char *strncpy(char *dst, const char *src, size_t len);$/;"	p
strnlen	../libs/string.c	/^strnlen(const char *s, size_t len)$/;"	f
strnlen	../libs/string.h	/^size_t strnlen(const char *s, size_t len);$/;"	p
strtol	../libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
strtol	../libs/string.h	/^long strtol(const char *s, char **endptr, int base);$/;"	p
swap	../libs/string.c	/^void swap(void *a,void *b,int sz)$/;"	f
tmp	../kern/kernel.asm	/^       tmp = n[i];$/;"	d
uchar	../libs/defs.h	/^typedef unsigned char uchar;$/;"	t
uint	../libs/defs.h	/^typedef unsigned int uint;$/;"	t
uint16_t	../libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	../libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	../libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	../libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	../libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
unum	../kern/kernel.asm	/^        unum = -num;$/;"	d
unum	../kern/kernel.asm	/^        unum = num; $/;"	d
ushort	../libs/defs.h	/^typedef unsigned short ushort;$/;"	t
va_arg	../libs/stdarg.h	8;"	d
va_end	../libs/stdarg.h	9;"	d
va_list	../libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	../libs/stdarg.h	7;"	d
video_memory	../kern/driver/console.c	/^static uint16_t *video_memory = (uint16_t*)P2V(0xB8000);$/;"	v	file:
void	../boot/bootblock.asm	/^void readseg(uchar*, uint, uint);$/;"	l
void	../boot/bootblock.asm	/^void$/;"	l
void	../kern/kernel.asm	/^void console_clear()$/;"	l
void	../kern/kernel.asm	/^void console_putc(char cstr)$/;"	l
void	../kern/kernel.asm	/^void console_putc_color(char c,real_color_t back, real_color_t fore)$/;"	l
void	../kern/kernel.asm	/^void swap(void *a,void *b,int sz)$/;"	l
vprintfmt	../libs/printfmt.c	/^int vprintfmt(void (*putch)(char), const char *fmt, va_list ap)$/;"	f
vprintfmt	../libs/stdio.h	/^int vprintfmt(void (*putch)(char), const char *fmt, va_list ap);$/;"	p
waitdisk	../boot/bootmain.c	/^waitdisk(void)$/;"	f
width	../kern/kernel.asm	/^                   width = 0;$/;"	d
width	../kern/kernel.asm	/^                   width = width * 10 +  ch - '0';$/;"	d
